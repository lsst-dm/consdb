"""Add column can_see_sky

Revision ID: 9f11c054a792
Revises: d928dc20a5e0
Create Date: 2025-06-09 21:34:46.362938+00:00

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "9f11c054a792"
down_revision: Union[str, None] = "d928dc20a5e0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("DROP VIEW IF EXISTS cdb_lsstcomcamsim.ccdvisit1")
    op.execute("DROP VIEW IF EXISTS cdb_lsstcomcamsim.visit1")
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "exposure",
        sa.Column(
            "can_see_sky",
            sa.BOOLEAN().with_variant(sa.BOOLEAN(), "mysql").with_variant(sa.BOOLEAN(), "postgresql"),
            nullable=True,
            comment="Whether the observation can see sky or not.",
        ),
        schema="cdb_lsstcomcamsim",
    )
    # ### end Alembic commands ###
    op.execute(
        "CREATE OR REPLACE VIEW cdb_lsstcomcamsim.visit1 AS\n        SELECT exposure_id AS visit_id, exposure_name, controller, day_obs, seq_num, physical_filter, band, s_ra, s_dec, sky_rotation, azimuth_start, azimuth_end, azimuth, altitude_start, altitude_end, altitude, zenith_distance_start, zenith_distance_end, zenith_distance, airmass, exp_midpt, exp_midpt_mjd, obs_start, obs_start_mjd, obs_end, obs_end_mjd, exp_time, shut_time, dark_time, group_id, cur_index, max_index, img_type, emulated, science_program, observation_reason, target_name, air_temp, pressure, humidity, wind_speed, wind_dir, dimm_seeing, focus_z, simulated, vignette, vignette_min, scheduler_note, s_region, can_see_sky\n        FROM cdb_lsstcomcamsim.exposure;"
    )
    op.execute("GRANT SELECT ON cdb_lsstcomcamsim.visit1 TO usdf;")
    op.execute("GRANT SELECT ON cdb_lsstcomcamsim.visit1 TO oods;")
    op.execute(
        "CREATE OR REPLACE VIEW cdb_lsstcomcamsim.ccdvisit1 AS\n        SELECT ccdexposure_id AS ccdvisit_id, exposure_id AS visit_id, day_obs, seq_num, detector, s_region\n        FROM cdb_lsstcomcamsim.ccdexposure;"
    )
    op.execute("GRANT SELECT ON cdb_lsstcomcamsim.ccdvisit1 TO usdf;")
    op.execute("GRANT SELECT ON cdb_lsstcomcamsim.ccdvisit1 TO oods;")


def downgrade() -> None:
    op.execute("DROP VIEW IF EXISTS cdb_lsstcomcamsim.ccdvisit1")
    op.execute("DROP VIEW IF EXISTS cdb_lsstcomcamsim.visit1")
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("exposure", "can_see_sky", schema="cdb_lsstcomcamsim")
    # ### end Alembic commands ###
    op.execute("CREATE VIEW cdb_lsstcomcamsim.ccdvisit1 AS SELECT * FROM cdb_lsstcomcamsim.ccdexposure")
    op.execute("CREATE VIEW cdb_lsstcomcamsim.visit1 AS SELECT * FROM cdb_lsstcomcamsim.exposure")
    op.execute("ALTER TABLE cdb_lsstcomcamsim.ccdvisit1 RENAME COLUMN ccdexposure_id TO ccdvisit_id")
    op.execute("ALTER TABLE cdb_lsstcomcamsim.ccdvisit1 RENAME COLUMN exposure_id TO visit_id")
    op.execute("ALTER TABLE cdb_lsstcomcamsim.visit1 RENAME COLUMN exposure_id TO visit_id")
    op.execute("GRANT SELECT ON cdb_lsstcomcamsim.ccdvisit1 TO usdf")
    op.execute("GRANT SELECT ON cdb_lsstcomcamsim.ccdvisit1 TO oods")
    op.execute("GRANT SELECT ON cdb_lsstcomcamsim.visit1 TO usdf")
    op.execute("GRANT SELECT ON cdb_lsstcomcamsim.visit1 TO oods")
