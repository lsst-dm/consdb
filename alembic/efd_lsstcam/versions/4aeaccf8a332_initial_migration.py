"""initial migration

Revision ID: 4aeaccf8a332
Revises:
Create Date: 2025-08-05 21:13:04.859139+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import mysql, postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4aeaccf8a332"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "exposure_efd",
        *[
            sa.Column(
                "day_obs",
                sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
                nullable=False,
                comment="Day of observation in YYYYMMDD format.",
            ),
            sa.Column(
                "seq_num",
                sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
                nullable=True,
                comment="Sequence number for the exposure.",
            ),
            sa.Column(
                "exposure_id",
                sa.BIGINT().with_variant(mysql.BIGINT(), "mysql").with_variant(sa.BIGINT(), "postgresql"),
                nullable=False,
                comment="Exposure unique ID.",
            ),
            sa.Column(
                "created_at",
                sa.TIMESTAMP()
                .with_variant(mysql.DATETIME(), "mysql")
                .with_variant(postgresql.TIMESTAMP(), "postgresql"),
                server_default=sa.text("CURRENT_TIMESTAMP"),
                nullable=True,
                comment="Timestamp when the record was created, default is current timestamp.",
            ),
            sa.Column(
                "mt_azimuth_encoder_absolute_position_0_rms_jitter",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RMS after 4th order polynomial fit of azimuth absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_azimuth_encoder_absolute_position_1_rms_jitter",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RMS after 4th order polynomial fit of azimuth absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_azimuth_encoder_absolute_position_2_rms_jitter",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RMS after 4th order polynomial fit of azimuth absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_azimuth_encoder_absolute_position_3_rms_jitter",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RMS after 4th order polynomial fit of azimuth absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_elevation_encoder_absolute_position_0_rms_jitter",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RMS after 4th order polynomial fit of elevation absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_elevation_encoder_absolute_position_1_rms_jitter",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RMS after 4th order polynomial fit of elevation absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_elevation_encoder_absolute_position_2_rms_jitter",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RMS after 4th order polynomial fit of elevation absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_elevation_encoder_absolute_position_3_rms_jitter",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RMS after 4th order polynomial fit of elevation absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_salindex110_sonic_temperature_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "mt_salindex110_sonic_temperature_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "mt_salindex110_sonic_temperature_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the mean standard deviation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "mt_salindex110_sonic_temperature_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_magnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_magnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_magnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_magnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_maxmagnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean maximum wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_maxmagnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the maximum wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_maxmagnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum maximum wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_maxmagnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum maximum wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex301_airflow_speed_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex301_airflow_speed_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex301_airflow_speed_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex301_airflow_speed_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex301_airflow_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed estimated from quartiles (salIndex 301). Not available for all sensor types.",
            ),
            sa.Column(
                "mt_salindex301_airflow_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed estimated from quartiles (salIndex 301). Not available for all sensor types.",
            ),
            sa.Column(
                "mt_salindex301_airflow_stddev_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed estimated from quartiles (salIndex 301). Not available for all sensor types.",
            ),
            sa.Column(
                "mt_salindex301_airflow_stddev_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed estimated from quartiles (salIndex 301). Not available for all sensor types.",
            ),
            sa.Column(
                "mt_salindex301_airflow_direction_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex301_airflow_direction_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex301_airflow_direction_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex301_airflow_direction_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex1_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex1_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex1_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex1_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex1_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex1_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex1_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex1_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex1_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex1_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex1_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex1_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex1_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex1_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex1_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex1_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex1_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex1_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex1_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex1_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex1_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex1_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex1_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex1_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex1_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex1_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex1_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex1_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex1_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex1_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex1_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex1_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex101_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex101_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex101_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex101_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex101_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex101_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex101_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex101_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex101_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex101_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex101_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex101_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex101_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex101_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex101_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex101_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex101_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex101_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex101_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex101_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex101_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex101_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex101_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex101_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex101_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex101_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex101_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex101_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex101_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex101_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex101_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex101_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex102_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean UNKNOWN temperature item 0.",
            ),
            sa.Column(
                "mt_salindex102_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the UNKNOWN temperature item 0.",
            ),
            sa.Column(
                "mt_salindex102_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum UNKNOWN temperature item 0.",
            ),
            sa.Column(
                "mt_salindex102_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean UNKNOWN temperature item 1.",
            ),
            sa.Column(
                "mt_salindex102_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum UNKNOWN temperature item 0.",
            ),
            sa.Column(
                "mt_salindex102_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 1.",
            ),
            sa.Column(
                "mt_salindex102_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 1.",
            ),
            sa.Column(
                "mt_salindex102_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 1.",
            ),
            sa.Column(
                "mt_salindex102_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 2.",
            ),
            sa.Column(
                "mt_salindex102_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 2.",
            ),
            sa.Column(
                "mt_salindex102_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 2.",
            ),
            sa.Column(
                "mt_salindex102_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 2.",
            ),
            sa.Column(
                "mt_salindex102_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 3.",
            ),
            sa.Column(
                "mt_salindex102_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the UNKNOWN temperature item 3.",
            ),
            sa.Column(
                "mt_salindex102_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 3.",
            ),
            sa.Column(
                "mt_salindex102_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 3.",
            ),
            sa.Column(
                "mt_salindex102_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 4.",
            ),
            sa.Column(
                "mt_salindex102_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 4.",
            ),
            sa.Column(
                "mt_salindex102_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 4.",
            ),
            sa.Column(
                "mt_salindex102_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 4.",
            ),
            sa.Column(
                "mt_salindex102_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 5.",
            ),
            sa.Column(
                "mt_salindex102_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 5.",
            ),
            sa.Column(
                "mt_salindex102_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 5.",
            ),
            sa.Column(
                "mt_salindex102_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 5.",
            ),
            sa.Column(
                "mt_salindex102_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 6.",
            ),
            sa.Column(
                "mt_salindex102_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 6.",
            ),
            sa.Column(
                "mt_salindex102_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 6.",
            ),
            sa.Column(
                "mt_salindex102_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 6.",
            ),
            sa.Column(
                "mt_salindex102_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 7.",
            ),
            sa.Column(
                "mt_salindex102_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 7.",
            ),
            sa.Column(
                "mt_salindex102_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 7.",
            ),
            sa.Column(
                "mt_salindex102_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 7.",
            ),
            sa.Column(
                "mt_salindex103_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 0.",
            ),
            sa.Column(
                "mt_salindex103_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 0.",
            ),
            sa.Column(
                "mt_salindex103_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 0.",
            ),
            sa.Column(
                "mt_salindex103_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 1.",
            ),
            sa.Column(
                "mt_salindex103_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 0.",
            ),
            sa.Column(
                "mt_salindex103_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 1.",
            ),
            sa.Column(
                "mt_salindex103_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 1.",
            ),
            sa.Column(
                "mt_salindex103_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 1.",
            ),
            sa.Column(
                "mt_salindex103_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 2.",
            ),
            sa.Column(
                "mt_salindex103_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 2.",
            ),
            sa.Column(
                "mt_salindex103_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 2.",
            ),
            sa.Column(
                "mt_salindex103_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 2.",
            ),
            sa.Column(
                "mt_salindex103_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 3.",
            ),
            sa.Column(
                "mt_salindex103_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 3.",
            ),
            sa.Column(
                "mt_salindex103_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 3.",
            ),
            sa.Column(
                "mt_salindex103_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 3.",
            ),
            sa.Column(
                "mt_salindex103_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 4.",
            ),
            sa.Column(
                "mt_salindex103_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 4.",
            ),
            sa.Column(
                "mt_salindex103_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 4.",
            ),
            sa.Column(
                "mt_salindex103_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 4.",
            ),
            sa.Column(
                "mt_salindex103_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 5.",
            ),
            sa.Column(
                "mt_salindex103_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 5.",
            ),
            sa.Column(
                "mt_salindex103_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 5.",
            ),
            sa.Column(
                "mt_salindex103_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 5.",
            ),
            sa.Column(
                "mt_salindex103_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 6.",
            ),
            sa.Column(
                "mt_salindex103_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 6.",
            ),
            sa.Column(
                "mt_salindex103_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 6.",
            ),
            sa.Column(
                "mt_salindex103_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 6.",
            ),
            sa.Column(
                "mt_salindex103_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 7.",
            ),
            sa.Column(
                "mt_salindex103_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 7.",
            ),
            sa.Column(
                "mt_salindex103_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 7.",
            ),
            sa.Column(
                "mt_salindex103_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 7.",
            ),
            sa.Column(
                "mt_salindex106_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex106_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex106_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex106_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex106_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex106_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex106_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex106_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex106_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex106_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex106_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex106_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex106_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex106_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex106_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex106_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex106_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex106_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex106_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex106_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex106_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex106_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex106_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex106_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex106_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex106_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex106_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex106_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex106_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex106_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex106_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex106_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex107_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex107_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex107_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex107_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex107_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex107_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex107_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex107_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex107_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex107_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex107_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex107_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex107_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex107_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex107_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex107_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex107_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex107_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex107_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex107_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex107_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex107_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex107_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex107_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex107_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex107_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex107_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex107_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex107_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex107_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex107_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex107_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex108_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex108_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex108_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex108_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex108_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex108_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex108_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex108_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex108_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex108_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex108_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex108_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex108_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex108_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex108_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex108_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex108_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex108_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex108_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex108_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex108_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex108_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex108_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex108_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex108_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex108_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex108_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex108_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex108_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex108_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex108_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex108_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex301_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 0.",
            ),
            sa.Column(
                "mt_salindex301_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 0.",
            ),
            sa.Column(
                "mt_salindex301_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 0.",
            ),
            sa.Column(
                "mt_salindex301_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 1.",
            ),
            sa.Column(
                "mt_salindex301_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 0.",
            ),
            sa.Column(
                "mt_salindex301_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 1.",
            ),
            sa.Column(
                "mt_salindex301_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 1.",
            ),
            sa.Column(
                "mt_salindex301_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 1.",
            ),
            sa.Column(
                "mt_salindex301_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 2.",
            ),
            sa.Column(
                "mt_salindex301_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 2.",
            ),
            sa.Column(
                "mt_salindex301_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 2.",
            ),
            sa.Column(
                "mt_salindex301_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 2.",
            ),
            sa.Column(
                "mt_salindex301_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 3.",
            ),
            sa.Column(
                "mt_salindex301_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 3.",
            ),
            sa.Column(
                "mt_salindex301_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 3.",
            ),
            sa.Column(
                "mt_salindex301_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 3.",
            ),
            sa.Column(
                "mt_salindex301_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 4.",
            ),
            sa.Column(
                "mt_salindex301_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 4.",
            ),
            sa.Column(
                "mt_salindex301_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 4.",
            ),
            sa.Column(
                "mt_salindex301_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 4.",
            ),
            sa.Column(
                "mt_salindex301_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 5.",
            ),
            sa.Column(
                "mt_salindex301_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 5.",
            ),
            sa.Column(
                "mt_salindex301_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 5.",
            ),
            sa.Column(
                "mt_salindex301_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 5.",
            ),
            sa.Column(
                "mt_salindex301_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 6.",
            ),
            sa.Column(
                "mt_salindex301_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 6.",
            ),
            sa.Column(
                "mt_salindex301_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 6.",
            ),
            sa.Column(
                "mt_salindex301_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 6.",
            ),
            sa.Column(
                "mt_salindex301_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 7.",
            ),
            sa.Column(
                "mt_salindex301_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 7.",
            ),
            sa.Column(
                "mt_salindex301_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 7.",
            ),
            sa.Column(
                "mt_salindex301_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 7.",
            ),
            sa.Column(
                "mt_dimm_fwhm_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean combined full width half maximum.",
            ),
            sa.Column(
                "mt_azimuth_encoder_absolute_position_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean azimuth absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_azimuth_encoder_absolute_position_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean azimuth absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_azimuth_encoder_absolute_position_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean azimuth absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_azimuth_encoder_absolute_position_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean azimuth absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_elevation_encoder_absolute_position_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean elevation absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_elevation_encoder_absolute_position_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean elevation absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_elevation_encoder_absolute_position_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean elevation absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_elevation_encoder_absolute_position_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean elevation absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_u_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean U angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_u_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum U angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_u_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum U angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_v_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean V angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_v_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum V angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_v_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum V angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_w_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean W angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_w_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum W angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_w_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum W angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean X-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum X-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum X-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Y-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Y-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Y-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Z-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Z-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Z-axis position.",
            ),
            sa.Column(
                "mt_salindex111_dewpoint_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean dew point.",
            ),
            sa.Column(
                "mt_salindex112_dewpoint_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean dew point.",
            ),
            sa.Column(
                "mt_salindex113_dewpoint_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean dew point.",
            ),
            sa.Column(
                "mt_salindex111_relative_humidity_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean relative humidity.",
            ),
            sa.Column(
                "mt_salindex112_relative_humidity_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean relative humidity.",
            ),
            sa.Column(
                "mt_salindex113_relative_humidity_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean relative humidity.",
            ),
            sa.Column(
                "mt_salindex113_pressure_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean pressure.",
            ),
            sa.Column(
                "mt_salindex113_pressure_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean pressure.",
            ),
            sa.Column(
                "mt_salindex301_pressure_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean pressure.",
            ),
            sa.Column(
                "mt_salindex301_pressure_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean pressure.",
            ),
            sa.Column(
                "mt_pointing_mount_position_ra_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean RA calculated from the azimuthActualPosition and elevationActualPosition.",
            ),
            sa.Column(
                "mt_pointing_mount_position_ra_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the RA calculated from the azimuthActualPosition and elevationActualPosition.",
            ),
            sa.Column(
                "mt_pointing_mount_position_dec_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Dec calculated from the azimuthActualPosition and elevationActualPosition.",
            ),
            sa.Column(
                "mt_pointing_mount_position_dec_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Dec calculated from the azimuthActualPosition and elevationActualPosition.",
            ),
            sa.Column(
                "mt_pointing_mount_position_sky_angle_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean calculated sky angle.",
            ),
            sa.Column(
                "mt_pointing_mount_position_sky_angle_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the calculated sky angle.",
            ),
            sa.Column(
                "mt_pointing_mount_position_rotator_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean rotator axis position reported by rotator component.",
            ),
            sa.Column(
                "mt_pointing_mount_position_rotator_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the rotator axis position reported by rotator component.",
            ),
            sa.Column(
                "camera_hexapod_aos_corrections_u",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="U position offset.",
            ),
            sa.Column(
                "camera_hexapod_aos_corrections_v",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="V position offset.",
            ),
            sa.Column(
                "camera_hexapod_aos_corrections_w",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="W position offset.",
            ),
            sa.Column(
                "camera_hexapod_aos_corrections_x",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="X position offset.",
            ),
            sa.Column(
                "camera_hexapod_aos_corrections_y",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Y position offset.",
            ),
            sa.Column(
                "camera_hexapod_aos_corrections_z",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Z position offset.",
            ),
            sa.Column(
                "m2_hexapod_aos_corrections_u",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="U position offset.",
            ),
            sa.Column(
                "m2_hexapod_aos_corrections_v",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="V position offset.",
            ),
            sa.Column(
                "m2_hexapod_aos_corrections_w",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="W position offset.",
            ),
            sa.Column(
                "m2_hexapod_aos_corrections_x",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="X position offset.",
            ),
            sa.Column(
                "m2_hexapod_aos_corrections_y",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Y position offset.",
            ),
            sa.Column(
                "m2_hexapod_aos_corrections_z",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Z position offset.",
            ),
            sa.Column(
                "m2_stress",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Calculate M2 stress computed RSS the stress contribution of each bending mode.",
            ),
            sa.Column(
                "m1m3_stress",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Calculate M1M3 stress computed RSS the stress contribution of each bending mode.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_x_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_y_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_z_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_x_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_y_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_z_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data angular Acceleration X.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_x_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer's X-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer's X-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer's X-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer's Y-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_y_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer's Y-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer's Y-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer's Y-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer's Z-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_z_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer's Z-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer's Z-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer's Z-axis angular acceleration.",
            ),
            sa.Column(
                "mt_dome_temperature_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean dome temperature item 0.",
            ),
            sa.PrimaryKeyConstraint("day_obs", "seq_num"),
            sa.UniqueConstraint("day_obs", "seq_num", name="un_exposure_efd_day_obs_seq_num"),
            sa.UniqueConstraint("exposure_id", name="un_exposure_efd_exposure_id"),
        ],
        schema="efd_lsstcam",
        comment="Transformed EFD topics by exposure.",
        mysql_engine="MyISAM",
    )
    op.create_table(
        "exposure_efd_unpivoted",
        sa.Column(
            "day_obs",
            sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
            nullable=False,
            comment="Day of observation in YYYYMMDD format.",
        ),
        sa.Column(
            "seq_num",
            sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
            nullable=False,
            comment="Sequence number for the exposure.",
        ),
        sa.Column(
            "exposure_id",
            sa.BIGINT().with_variant(mysql.BIGINT(), "mysql").with_variant(sa.BIGINT(), "postgresql"),
            nullable=False,
            comment="Unique identifier for the exposure.",
        ),
        sa.Column(
            "property",
            sa.VARCHAR(length=64)
            .with_variant(mysql.VARCHAR(length=64), "mysql")
            .with_variant(sa.VARCHAR(length=64), "postgresql"),
            server_default="default_property",
            nullable=False,
            comment="Property name for unpivoted data",
        ),
        sa.Column(
            "field",
            sa.VARCHAR(length=32)
            .with_variant(mysql.VARCHAR(length=32), "mysql")
            .with_variant(sa.VARCHAR(length=32), "postgresql"),
            server_default="default_field",
            nullable=False,
            comment="Field name for unpivoted data.",
        ),
        sa.Column(
            "value",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Value corresponding to the parameter",
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP()
            .with_variant(mysql.DATETIME(), "mysql")
            .with_variant(postgresql.TIMESTAMP(), "postgresql"),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
            comment="Timestamp when record was created, default current timestamp.",
        ),
        sa.PrimaryKeyConstraint("day_obs", "seq_num", "exposure_id", "property", "field"),
        schema="efd_lsstcam",
        comment="Unpivoted EFD exposure data.",
        mysql_engine="MyISAM",
    )
    op.create_table(
        "visit1_efd",
        *[
            sa.Column(
                "day_obs",
                sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
                nullable=False,
                comment="Day of observation in YYYYMMDD format.",
            ),
            sa.Column(
                "seq_num",
                sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
                nullable=True,
                comment="Sequence number for the visit.",
            ),
            sa.Column(
                "visit_id",
                sa.BIGINT().with_variant(mysql.BIGINT(), "mysql").with_variant(sa.BIGINT(), "postgresql"),
                nullable=False,
                comment="Visit unique ID.",
            ),
            sa.Column(
                "created_at",
                sa.TIMESTAMP()
                .with_variant(mysql.DATETIME(), "mysql")
                .with_variant(postgresql.TIMESTAMP(), "postgresql"),
                server_default=sa.text("CURRENT_TIMESTAMP"),
                nullable=True,
                comment="Timestamp when record was created, default current timestamp.",
            ),
            sa.Column(
                "mt_salindex110_sonic_temperature_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "mt_salindex110_sonic_temperature_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "mt_salindex110_sonic_temperature_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the mean standard deviation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "mt_salindex110_sonic_temperature_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 0 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 1 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_stddev_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in TMA-GillLabJack01 along axis 2 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_magnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_magnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_magnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_magnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_maxmagnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean maximum wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_maxmagnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the maximum wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_maxmagnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum maximum wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex110_wind_speed_maxmagnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum maximum wind speed magnitude in TMA-GillLabJack01 (salIndex 110).",
            ),
            sa.Column(
                "mt_salindex301_airflow_speed_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex301_airflow_speed_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex301_airflow_speed_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex301_airflow_speed_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex301_airflow_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed estimated from quartiles (salIndex 301). Not available for all sensor types.",
            ),
            sa.Column(
                "mt_salindex301_airflow_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed estimated from quartiles (salIndex 301). Not available for all sensor types.",
            ),
            sa.Column(
                "mt_salindex301_airflow_stddev_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed estimated from quartiles (salIndex 301). Not available for all sensor types.",
            ),
            sa.Column(
                "mt_salindex301_airflow_stddev_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed estimated from quartiles (salIndex 301). Not available for all sensor types.",
            ),
            sa.Column(
                "mt_salindex301_airflow_direction_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex301_airflow_direction_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex301_airflow_direction_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex301_airflow_direction_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed (salIndex 301).",
            ),
            sa.Column(
                "mt_salindex1_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex1_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex1_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex1_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex1_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex1_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex1_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex1_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex1_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex1_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex1_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex1_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex1_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex1_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex1_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex1_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex1_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex1_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex1_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex1_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex1_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex1_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex1_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex1_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex1_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex1_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex1_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex1_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex1_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex1_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex1_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex1_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex101_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex101_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex101_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex101_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex101_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex101_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex101_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex101_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex101_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex101_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex101_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex101_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex101_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex101_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex101_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex101_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex101_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex101_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex101_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex101_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex101_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex101_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex101_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex101_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex101_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex101_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex101_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex101_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex101_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex101_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex101_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex101_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum MTCameraAssembly-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex102_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean UNKNOWN temperature item 0.",
            ),
            sa.Column(
                "mt_salindex102_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the UNKNOWN temperature item 0.",
            ),
            sa.Column(
                "mt_salindex102_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum UNKNOWN temperature item 0.",
            ),
            sa.Column(
                "mt_salindex102_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean UNKNOWN temperature item 1.",
            ),
            sa.Column(
                "mt_salindex102_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum UNKNOWN temperature item 0.",
            ),
            sa.Column(
                "mt_salindex102_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 1.",
            ),
            sa.Column(
                "mt_salindex102_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 1.",
            ),
            sa.Column(
                "mt_salindex102_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 1.",
            ),
            sa.Column(
                "mt_salindex102_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 2.",
            ),
            sa.Column(
                "mt_salindex102_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 2.",
            ),
            sa.Column(
                "mt_salindex102_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 2.",
            ),
            sa.Column(
                "mt_salindex102_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 2.",
            ),
            sa.Column(
                "mt_salindex102_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 3.",
            ),
            sa.Column(
                "mt_salindex102_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the UNKNOWN temperature item 3.",
            ),
            sa.Column(
                "mt_salindex102_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 3.",
            ),
            sa.Column(
                "mt_salindex102_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 3.",
            ),
            sa.Column(
                "mt_salindex102_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 4.",
            ),
            sa.Column(
                "mt_salindex102_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 4.",
            ),
            sa.Column(
                "mt_salindex102_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 4.",
            ),
            sa.Column(
                "mt_salindex102_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 4.",
            ),
            sa.Column(
                "mt_salindex102_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 5.",
            ),
            sa.Column(
                "mt_salindex102_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 5.",
            ),
            sa.Column(
                "mt_salindex102_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 5.",
            ),
            sa.Column(
                "mt_salindex102_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 5.",
            ),
            sa.Column(
                "mt_salindex102_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 6.",
            ),
            sa.Column(
                "mt_salindex102_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 6.",
            ),
            sa.Column(
                "mt_salindex102_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 6.",
            ),
            sa.Column(
                "mt_salindex102_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 6.",
            ),
            sa.Column(
                "mt_salindex102_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 7.",
            ),
            sa.Column(
                "mt_salindex102_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 7.",
            ),
            sa.Column(
                "mt_salindex102_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 7.",
            ),
            sa.Column(
                "mt_salindex102_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 7.",
            ),
            sa.Column(
                "mt_salindex103_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 0.",
            ),
            sa.Column(
                "mt_salindex103_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 0.",
            ),
            sa.Column(
                "mt_salindex103_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 0.",
            ),
            sa.Column(
                "mt_salindex103_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 1.",
            ),
            sa.Column(
                "mt_salindex103_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 0.",
            ),
            sa.Column(
                "mt_salindex103_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 1.",
            ),
            sa.Column(
                "mt_salindex103_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 1.",
            ),
            sa.Column(
                "mt_salindex103_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 1.",
            ),
            sa.Column(
                "mt_salindex103_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 2.",
            ),
            sa.Column(
                "mt_salindex103_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 2.",
            ),
            sa.Column(
                "mt_salindex103_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 2.",
            ),
            sa.Column(
                "mt_salindex103_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 2.",
            ),
            sa.Column(
                "mt_salindex103_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 3.",
            ),
            sa.Column(
                "mt_salindex103_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 3.",
            ),
            sa.Column(
                "mt_salindex103_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 3.",
            ),
            sa.Column(
                "mt_salindex103_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 3.",
            ),
            sa.Column(
                "mt_salindex103_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 4.",
            ),
            sa.Column(
                "mt_salindex103_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 4.",
            ),
            sa.Column(
                "mt_salindex103_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 4.",
            ),
            sa.Column(
                "mt_salindex103_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 4.",
            ),
            sa.Column(
                "mt_salindex103_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 5.",
            ),
            sa.Column(
                "mt_salindex103_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 5.",
            ),
            sa.Column(
                "mt_salindex103_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 5.",
            ),
            sa.Column(
                "mt_salindex103_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 5.",
            ),
            sa.Column(
                "mt_salindex103_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 6.",
            ),
            sa.Column(
                "mt_salindex103_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 6.",
            ),
            sa.Column(
                "mt_salindex103_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 6.",
            ),
            sa.Column(
                "mt_salindex103_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 6.",
            ),
            sa.Column(
                "mt_salindex103_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean temperature item 7.",
            ),
            sa.Column(
                "mt_salindex103_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of temperature item 7.",
            ),
            sa.Column(
                "mt_salindex103_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum temperature item 7.",
            ),
            sa.Column(
                "mt_salindex103_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum temperature item 7.",
            ),
            sa.Column(
                "mt_salindex106_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex106_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex106_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex106_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex106_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex106_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex106_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex106_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex106_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex106_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex106_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex106_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex106_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex106_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex106_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex106_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex106_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex106_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex106_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex106_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex106_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex106_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex106_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex106_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex106_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex106_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex106_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex106_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex106_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean M2-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex106_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the M2-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex106_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum M2-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex106_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum M2-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex107_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex107_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex107_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex107_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex107_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex107_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex107_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex107_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex107_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex107_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex107_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex107_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex107_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex107_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex107_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex107_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex107_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex107_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex107_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex107_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex107_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex107_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex107_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex107_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex107_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex107_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex107_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex107_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex107_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Laser-ESS01, Laser-ESS02 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex107_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Laser-ESS01, Laser-ESS02 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex107_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Laser-ESS01, Laser-ESS02 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex107_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Laser-ESS01, Laser-ESS02 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex108_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex108_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex108_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex108_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex108_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 0.",
            ),
            sa.Column(
                "mt_salindex108_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex108_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex108_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 1.",
            ),
            sa.Column(
                "mt_salindex108_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex108_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex108_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex108_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 2.",
            ),
            sa.Column(
                "mt_salindex108_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex108_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex108_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex108_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 3.",
            ),
            sa.Column(
                "mt_salindex108_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex108_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex108_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex108_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 4.",
            ),
            sa.Column(
                "mt_salindex108_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex108_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex108_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex108_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 5.",
            ),
            sa.Column(
                "mt_salindex108_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex108_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex108_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex108_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 6.",
            ),
            sa.Column(
                "mt_salindex108_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean CBP-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex108_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the CBP-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex108_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum CBP-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex108_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum CBP-ESS01 temperature item 7.",
            ),
            sa.Column(
                "mt_salindex301_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 0.",
            ),
            sa.Column(
                "mt_salindex301_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 0.",
            ),
            sa.Column(
                "mt_salindex301_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 0.",
            ),
            sa.Column(
                "mt_salindex301_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 1.",
            ),
            sa.Column(
                "mt_salindex301_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 0.",
            ),
            sa.Column(
                "mt_salindex301_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 1.",
            ),
            sa.Column(
                "mt_salindex301_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 1.",
            ),
            sa.Column(
                "mt_salindex301_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 1.",
            ),
            sa.Column(
                "mt_salindex301_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 2.",
            ),
            sa.Column(
                "mt_salindex301_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 2.",
            ),
            sa.Column(
                "mt_salindex301_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 2.",
            ),
            sa.Column(
                "mt_salindex301_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 2.",
            ),
            sa.Column(
                "mt_salindex301_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 3.",
            ),
            sa.Column(
                "mt_salindex301_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 3.",
            ),
            sa.Column(
                "mt_salindex301_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 3.",
            ),
            sa.Column(
                "mt_salindex301_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 3.",
            ),
            sa.Column(
                "mt_salindex301_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 4.",
            ),
            sa.Column(
                "mt_salindex301_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 4.",
            ),
            sa.Column(
                "mt_salindex301_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 4.",
            ),
            sa.Column(
                "mt_salindex301_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 4.",
            ),
            sa.Column(
                "mt_salindex301_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 5.",
            ),
            sa.Column(
                "mt_salindex301_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 5.",
            ),
            sa.Column(
                "mt_salindex301_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 5.",
            ),
            sa.Column(
                "mt_salindex301_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 5.",
            ),
            sa.Column(
                "mt_salindex301_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 6.",
            ),
            sa.Column(
                "mt_salindex301_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 6.",
            ),
            sa.Column(
                "mt_salindex301_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 6.",
            ),
            sa.Column(
                "mt_salindex301_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 6.",
            ),
            sa.Column(
                "mt_salindex301_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean weather tower air temperature item 7.",
            ),
            sa.Column(
                "mt_salindex301_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the weather tower air temperature item 7.",
            ),
            sa.Column(
                "mt_salindex301_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum weather tower air temperature item 7.",
            ),
            sa.Column(
                "mt_salindex301_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum weather tower air temperature item 7.",
            ),
            sa.Column(
                "mt_dimm_fwhm_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean combined full width half maximum.",
            ),
            sa.Column(
                "mt_azimuth_encoder_absolute_position_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean azimuth absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_azimuth_encoder_absolute_position_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean azimuth absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_azimuth_encoder_absolute_position_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean azimuth absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_azimuth_encoder_absolute_position_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean azimuth absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_elevation_encoder_absolute_position_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean elevation absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_elevation_encoder_absolute_position_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean elevation absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_elevation_encoder_absolute_position_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean elevation absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_elevation_encoder_absolute_position_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean elevation absolute position read by each encoder head.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_u_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean U angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_u_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum U angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_u_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum U angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_v_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean V angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_v_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum V angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_v_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum V angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_w_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean W angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_w_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum W angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_w_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum W angle.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean X-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum X-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum X-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Y-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Y-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Y-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Z-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum Z-axis position.",
            ),
            sa.Column(
                "mt_hexapod_uncompensated_position_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum Z-axis position.",
            ),
            sa.Column(
                "mt_salindex111_dewpoint_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean dew point.",
            ),
            sa.Column(
                "mt_salindex112_dewpoint_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean dew point.",
            ),
            sa.Column(
                "mt_salindex113_dewpoint_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean dew point.",
            ),
            sa.Column(
                "mt_salindex111_relative_humidity_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean relative humidity.",
            ),
            sa.Column(
                "mt_salindex112_relative_humidity_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean relative humidity.",
            ),
            sa.Column(
                "mt_salindex113_relative_humidity_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean relative humidity.",
            ),
            sa.Column(
                "mt_salindex113_pressure_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean pressure.",
            ),
            sa.Column(
                "mt_salindex113_pressure_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean pressure.",
            ),
            sa.Column(
                "mt_salindex301_pressure_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean pressure.",
            ),
            sa.Column(
                "mt_salindex301_pressure_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean pressure.",
            ),
            sa.Column(
                "mt_pointing_mount_position_ra_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean RA calculated from the azimuthActualPosition and elevationActualPosition.",
            ),
            sa.Column(
                "mt_pointing_mount_position_ra_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the RA calculated from the azimuthActualPosition and elevationActualPosition.",
            ),
            sa.Column(
                "mt_pointing_mount_position_dec_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Dec calculated from the azimuthActualPosition and elevationActualPosition.",
            ),
            sa.Column(
                "mt_pointing_mount_position_dec_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Dec calculated from the azimuthActualPosition and elevationActualPosition.",
            ),
            sa.Column(
                "mt_pointing_mount_position_sky_angle_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean calculated sky angle.",
            ),
            sa.Column(
                "mt_pointing_mount_position_sky_angle_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the calculated sky angle.",
            ),
            sa.Column(
                "mt_pointing_mount_position_rotator_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean rotator axis position reported by rotator component.",
            ),
            sa.Column(
                "mt_pointing_mount_position_rotator_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the rotator axis position reported by rotator component.",
            ),
            sa.Column(
                "camera_hexapod_aos_corrections_u",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="U position offset.",
            ),
            sa.Column(
                "camera_hexapod_aos_corrections_v",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="V position offset.",
            ),
            sa.Column(
                "camera_hexapod_aos_corrections_w",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="W position offset.",
            ),
            sa.Column(
                "camera_hexapod_aos_corrections_x",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="X position offset.",
            ),
            sa.Column(
                "camera_hexapod_aos_corrections_y",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Y position offset.",
            ),
            sa.Column(
                "camera_hexapod_aos_corrections_z",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Z position offset.",
            ),
            sa.Column(
                "m2_hexapod_aos_corrections_u",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="U position offset.",
            ),
            sa.Column(
                "m2_hexapod_aos_corrections_v",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="V position offset.",
            ),
            sa.Column(
                "m2_hexapod_aos_corrections_w",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="W position offset.",
            ),
            sa.Column(
                "m2_hexapod_aos_corrections_x",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="X position offset.",
            ),
            sa.Column(
                "m2_hexapod_aos_corrections_y",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Y position offset.",
            ),
            sa.Column(
                "m2_hexapod_aos_corrections_z",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Z position offset.",
            ),
            sa.Column(
                "m2_stress",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Calculate M2 stress computed RSS the stress contribution of each bending mode.",
            ),
            sa.Column(
                "m1m3_stress",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Calculate M1M3 stress computed RSS the stress contribution of each bending mode.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_x_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_y_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_z_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_acceleration_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_x_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in x direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_y_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in y direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_z_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_accelerationpsd_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in z direction.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_accelerometer_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer data.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer data angular Acceleration X.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_x_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer's X-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer's X-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer's X-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer's Y-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_y_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer's Y-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer's Y-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer's Y-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean accelerometer's Z-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_z_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the accelerometer's Z-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum accelerometer's Z-axis angular acceleration.",
            ),
            sa.Column(
                "mt_salindex104_m1m3_angular_acceleration_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum accelerometer's Z-axis angular acceleration.",
            ),
            sa.Column(
                "mt_dome_temperature_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean dome temperature item 0.",
            ),
            sa.PrimaryKeyConstraint("day_obs", "seq_num"),
            sa.UniqueConstraint("day_obs", "seq_num", name="un_visit1_efd_day_obs_seq_num"),
            sa.UniqueConstraint("visit_id", name="un_visit1_efd_visit_id"),
        ],
        schema="efd_lsstcam",
        comment="Transformed EFD topics by visit.",
        mysql_engine="MyISAM",
    )
    op.create_table(
        "visit1_efd_unpivoted",
        sa.Column(
            "day_obs",
            sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
            nullable=False,
            comment="Day of observation in YYYYMMDD format.",
        ),
        sa.Column(
            "seq_num",
            sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
            nullable=False,
            comment="Sequence number for the visit.",
        ),
        sa.Column(
            "visit_id",
            sa.BIGINT().with_variant(mysql.BIGINT(), "mysql").with_variant(sa.BIGINT(), "postgresql"),
            nullable=False,
            comment="Unique identifier for the visit.",
        ),
        sa.Column(
            "property",
            sa.VARCHAR(length=64)
            .with_variant(mysql.VARCHAR(length=64), "mysql")
            .with_variant(sa.VARCHAR(length=64), "postgresql"),
            server_default="default_property",
            nullable=False,
            comment="Property name for unpivoted data.",
        ),
        sa.Column(
            "field",
            sa.VARCHAR(length=32)
            .with_variant(mysql.VARCHAR(length=32), "mysql")
            .with_variant(sa.VARCHAR(length=32), "postgresql"),
            server_default="default_field",
            nullable=False,
            comment="Field name for unpivoted data.",
        ),
        sa.Column(
            "value",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Value corresponding to the parameter.",
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP()
            .with_variant(mysql.DATETIME(), "mysql")
            .with_variant(postgresql.TIMESTAMP(), "postgresql"),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
            comment="Timestamp when record was created, default current timestamp.",
        ),
        sa.PrimaryKeyConstraint("day_obs", "seq_num", "visit_id", "property", "field"),
        schema="efd_lsstcam",
        comment="Unpivoted EFD visit data.",
        mysql_engine="MyISAM",
    )
    # ### end Alembic commands ###
    op.execute("GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA efd TO oods")
    op.execute("GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA efd_lsstcam TO oods")
    op.execute("GRANT SELECT ON ALL TABLES IN SCHEMA efd_lsstcam TO usdf")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("visit1_efd_unpivoted", schema="efd_lsstcam")
    op.drop_table("visit1_efd", schema="efd_lsstcam")
    op.drop_table("exposure_efd_unpivoted", schema="efd_lsstcam")
    op.drop_table("exposure_efd", schema="efd_lsstcam")
    # ### end Alembic commands ###
