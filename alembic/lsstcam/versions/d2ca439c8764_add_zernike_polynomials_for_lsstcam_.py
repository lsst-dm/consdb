"""Add zernike polynomials for LSSTCam quicklook

Revision ID: d2ca439c8764
Revises: 85665c4df7cf
Create Date: 2025-06-10 20:41:40.020512+00:00

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "d2ca439c8764"
down_revision: Union[str, None] = "85665c4df7cf"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z4",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated defocus (Z4), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z5",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated oblique primary astigmatism (Z5), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z6",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical primary astigmatism (Z6), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z7",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical primary coma (Z7), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z8",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated horizontal primary coma (Z8), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z9",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical trefoil (Z9), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z10",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated horizontal trefoil (Z10), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z11",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated primary spherical (Z11), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z12",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical secondary astigmatism (Z12), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z13",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated oblique secondary astigmatism (Z13), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z14",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical quadrafoil (Z14), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z15",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated horizontal quadrafoil (Z15), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z16",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated horizontal secondary coma (Z16), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z17",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical secondary coma (Z17), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z18",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated oblique secondary trefoil (Z18), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z19",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical secondary trefoil (Z19), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z20",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated oblique pentafoil (Z20), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z21",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical pentafoil (Z21), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z22",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated secondary spherical (Z22), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z23",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated tertiary astimgatism (Z23), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z24",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated tertiary astimgatism (Z24), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z25",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated oblique secondary quadrafoil (Z25), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z26",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical secondary quadrafoil (Z26), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z27",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated hexafoil (Z27), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "ccdvisit1_quicklook",
        sa.Column(
            "z28",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated hexafoil (Z28), in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z4",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated defocus (Z4), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z5",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated oblique primary astigmatism (Z5), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z6",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical primary astigmatism (Z6), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z7",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical primary coma (Z7), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z8",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated horizontal primary coma (Z8), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z9",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical trefoil (Z9), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z10",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated horizontal trefoil (Z10), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z11",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated primary spherical (Z11), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z12",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical secondary astigmatism (Z12), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z13",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated oblique secondary astigmatism (Z13), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z14",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical quadrafoil (Z14), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z15",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated horizontal quadrafoil (Z15), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z16",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated horizontal secondary coma (Z16), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z17",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical secondary coma (Z17), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z18",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated oblique secondary trefoil (Z18), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z19",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical secondary trefoil (Z19), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z20",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated oblique pentafoil (Z20), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z21",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical pentafoil (Z21), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z22",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated secondary spherical (Z22), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z23",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated tertiary astimgatism (Z23), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z24",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated tertiary astimgatism (Z24), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z25",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated oblique secondary quadrafoil (Z25), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z26",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated vertical secondary quadrafoil (Z26), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z27",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated hexafoil (Z27), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "z28",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated hexafoil (Z28), mean estimated across four corners in microns.",
        ),
        schema="cdb_lsstcam",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("visit1_quicklook", "z28", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z27", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z26", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z25", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z24", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z23", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z22", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z21", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z20", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z19", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z18", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z17", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z16", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z15", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z14", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z13", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z12", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z11", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z10", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z9", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z8", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z7", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z6", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z5", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "z4", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z28", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z27", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z26", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z25", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z24", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z23", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z22", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z21", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z20", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z19", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z18", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z17", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z16", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z15", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z14", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z13", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z12", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z11", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z10", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z9", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z8", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z7", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z6", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z5", schema="cdb_lsstcam")
    op.drop_column("ccdvisit1_quicklook", "z4", schema="cdb_lsstcam")
    # ### end Alembic commands ###
