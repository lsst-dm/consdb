"""Add ringss seeing, aos fwhm and danish fwhm

Revision ID: ab5ec8a5f784
Revises: d2ca439c8764
Create Date: 2025-07-23 19:30:38.663063+00:00

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "ab5ec8a5f784"
down_revision: Union[str, None] = "d2ca439c8764"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "exposure",
        "dimm_seeing",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        comment="Atmospheric seeing as measured by external DIMM (FWHM).",
        existing_comment="Seeing as measured by external DIMM (FWHM).",
        existing_nullable=True,
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "ringss_seeing",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Atmospheric seeing as measured by external SOAR/Gemini RINGSS (FWHM)",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "aos_fwhm",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated contribution of the optical system to the overall seeing (FWHM) using the measured zernike coefficients.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "donut_blur_fwhm",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Estimated contribution of the atmosphere to the overall seeing (FWHM) derived from danish donut forward modeling.",
        ),
        schema="cdb_lsstcam",
    )
    op.add_column(
        "visit1_quicklook",
        sa.Column(
            "physical_rotator_angle",
            sa.DOUBLE()
            .with_variant(mysql.DOUBLE(asdecimal=True), "mysql")
            .with_variant(sa.DOUBLE_PRECISION(), "postgresql"),
            nullable=True,
            comment="Physical rotator angle in degrees.",
        ),
        schema="cdb_lsstcam",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("visit1_quicklook", "physical_rotator_angle", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "donut_blur_fwhm", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "aos_fwhm", schema="cdb_lsstcam")
    op.drop_column("visit1_quicklook", "ringss_seeing", schema="cdb_lsstcam")
    op.alter_column(
        "exposure",
        "dimm_seeing",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        comment="Seeing as measured by external DIMM (FWHM).",
        existing_comment="Atmospheric seeing as measured by external DIMM (FWHM).",
        existing_nullable=True,
        schema="cdb_lsstcam",
    )
    # ### end Alembic commands ###
