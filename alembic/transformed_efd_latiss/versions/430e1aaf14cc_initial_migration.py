"""initial migration

Revision ID: 430e1aaf14cc
Revises:
Create Date: 2025-04-02 20:56:21.021900+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import mysql, postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "430e1aaf14cc"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "exposure_efd",
        *[
            sa.Column(
                "exposure_id",
                sa.BIGINT().with_variant(mysql.BIGINT(), "mysql").with_variant(sa.BIGINT(), "postgresql"),
                nullable=True,
                comment="Exposure unique ID.",
            ),
            sa.Column(
                "created_at",
                sa.TIMESTAMP()
                .with_variant(mysql.DATETIME(), "mysql")
                .with_variant(postgresql.TIMESTAMP(), "postgresql"),
                server_default=sa.text("CURRENT_TIMESTAMP"),
                nullable=True,
                comment="Timestamp when the record was created, default is current timestamp",
            ),
            sa.Column(
                "at_mount_jitter_azimuth",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RMS after 4th order polynomial fit of azimuth axis position computed from the axis encoders at 100 Hz beginning at the specified time. The range is the hard stop limits (L3), approximately -280 to 280.",
            ),
            sa.Column(
                "at_mount_jitter_elevation",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RMS after 4th order polynomial fit of elevation axis position computed from the axis encoders at 100 Hz beginning at the specified time.",
            ),
            sa.Column(
                "at_mount_jitter_nasmyth",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RMS after 4th order polynomial fit of Nasmyth 1 axis position computed from the axis encoders, or nan if this axis is not in use. The range is the software limits (L1), approximately -175 to 175.",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard devation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard devation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard devation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard devation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_airflow_speedstddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_speedstddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_speedstddev_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_speedstddev_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_airflow_speedstddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_speedstddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_speedstddev_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_speedstddev_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_airflow_speedstddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_speedstddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_speedstddev_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_speedstddev_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex201_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex201_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex201_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex201_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex201_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex201_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex201_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex201_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex201_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex201_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex201_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex201_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex201_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex201_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex201_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex201_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex201_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex201_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex201_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex201_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex201_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex201_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex201_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex201_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex201_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex201_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex201_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex201_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex201_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_salindex201_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_salindex201_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_salindex201_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_salindex301_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex301_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex301_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex301_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex301_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex301_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex301_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex301_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex301_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex301_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex301_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex301_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex301_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex301_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex301_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex301_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex301_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex301_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex301_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex301_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex301_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex301_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex301_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex301_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex301_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex301_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex301_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex301_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex301_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_salindex301_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_salindex301_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_salindex301_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_azimuth_calculated_angle",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Azimuth axis position computed from the axis encoders at 100 Hz beginning at the specified time. The range is the hard stop limits (L3),  approximately -280 to 280.",
            ),
            sa.Column(
                "at_elevation_calculated_angle",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Elevation axis position computed from the axis encoders at 100 Hz beginning at the specified time.",
            ),
            sa.Column(
                "at_dimm_fwhm_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Combined full width half maximum",
            ),
            sa.Column(
                "at_azimuth_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Elevation axis position computed from the axis encoders at 100 Hz beginning at the specified time.",
            ),
            sa.Column(
                "at_elevation_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Azimuth axis position computed from the axis encoders at 100 Hz beginning at the specified time. The range is the hard stop limits (L3), approximately -280 to 280.",
            ),
            sa.Column(
                "at_hexapod_reported_position_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in x",
            ),
            sa.Column(
                "at_hexapod_reported_position_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in x",
            ),
            sa.Column(
                "at_hexapod_reported_position_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in x",
            ),
            sa.Column(
                "at_hexapod_reported_position_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in y",
            ),
            sa.Column(
                "at_hexapod_reported_position_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in y",
            ),
            sa.Column(
                "at_hexapod_reported_position_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in y",
            ),
            sa.Column(
                "at_hexapod_reported_position_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in z",
            ),
            sa.Column(
                "at_hexapod_reported_position_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in z",
            ),
            sa.Column(
                "at_hexapod_reported_position_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in z",
            ),
            sa.Column(
                "at_hexapod_reported_position_u_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in u",
            ),
            sa.Column(
                "at_hexapod_reported_position_u_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in u",
            ),
            sa.Column(
                "at_hexapod_reported_position_u_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in u",
            ),
            sa.Column(
                "at_hexapod_reported_position_v_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in v",
            ),
            sa.Column(
                "at_hexapod_reported_position_v_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in v",
            ),
            sa.Column(
                "at_hexapod_reported_position_v_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in v",
            ),
            sa.Column(
                "at_hexapod_reported_position_w_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in w",
            ),
            sa.Column(
                "at_hexapod_reported_position_w_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in w",
            ),
            sa.Column(
                "at_hexapod_reported_position_w_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in w",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex201_dewpoint_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Dew point in AuxTel-ESS02",
            ),
            sa.Column(
                "at_salindex201_relative_humidity_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Relative humidity in AuxTel-ESS02",
            ),
            sa.Column(
                "at_salindex201_pressure_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Atmosferic pressure item 0 in AuxTel-ESS02",
            ),
            sa.Column(
                "at_salindex201_pressure_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Atmosferic pressure item 1 in AuxTel-ESS02",
            ),
            sa.Column(
                "at_salindex301_pressure_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Atmosferic pressure item 0 in weather tower atmospheric pressure",
            ),
            sa.Column(
                "at_salindex301_pressure_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Atmosferic pressure item 1 in weather tower atmospheric pressure",
            ),
            sa.Column(
                "at_pointing_mount_position_ra_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RA calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_ra_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RA calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_dec_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Dec calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_dec_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Dec calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_sky_angle_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Calculated sky angle.",
            ),
            sa.Column(
                "at_pointing_mount_position_sky_angle_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Calculated sky angle.",
            ),
            sa.PrimaryKeyConstraint("exposure_id"),
            sa.UniqueConstraint("exposure_id", name="un_exposure_id"),
        ],
        schema="efd_latiss",
        comment="Transformed EFD topics by exposure.",
        mysql_engine="MyISAM",
    )
    op.create_table(
        "exposure_efd_unpivoted",
        sa.Column(
            "exposure_id",
            sa.BIGINT().with_variant(mysql.BIGINT(), "mysql").with_variant(sa.BIGINT(), "postgresql"),
            nullable=False,
            comment="Unique identifier for the exposure",
        ),
        sa.Column(
            "property",
            sa.VARCHAR(length=64)
            .with_variant(mysql.VARCHAR(length=64), "mysql")
            .with_variant(sa.VARCHAR(length=64), "postgresql"),
            server_default="default_property",
            nullable=False,
            comment="Property name for unpivoted data",
        ),
        sa.Column(
            "field",
            sa.VARCHAR(length=32)
            .with_variant(mysql.VARCHAR(length=32), "mysql")
            .with_variant(sa.VARCHAR(length=32), "postgresql"),
            server_default="default_field",
            nullable=False,
            comment="Field name for unpivoted data",
        ),
        sa.Column(
            "value",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Value corresponding to the parameter",
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP()
            .with_variant(mysql.DATETIME(), "mysql")
            .with_variant(postgresql.TIMESTAMP(), "postgresql"),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
            comment="Timestamp when record was created, default current timestamp",
        ),
        sa.PrimaryKeyConstraint("exposure_id", "property", "field"),
        sa.UniqueConstraint("exposure_id", "property", "field", name="un_exposure_property_field"),
        schema="efd_latiss",
        comment="Unpivoted EFD exposure data.",
        mysql_engine="MyISAM",
    )
    op.create_table(
        "transformed_efd_scheduler",
        sa.Column(
            "id",
            sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
            autoincrement=True,
            nullable=False,
            comment="Unique ID, auto-incremented",
        ),
        sa.Column(
            "start_time",
            sa.TIMESTAMP()
            .with_variant(mysql.DATETIME(), "mysql")
            .with_variant(postgresql.TIMESTAMP(), "postgresql"),
            nullable=True,
            comment="Start time of transformation interval, must be provided",
        ),
        sa.Column(
            "end_time",
            sa.TIMESTAMP()
            .with_variant(mysql.DATETIME(), "mysql")
            .with_variant(postgresql.TIMESTAMP(), "postgresql"),
            nullable=True,
            comment="End time of transformation interval, must be provided",
        ),
        sa.Column(
            "timewindow",
            sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
            nullable=True,
            comment="Time window to expand start/end times by (minutes)",
        ),
        sa.Column(
            "status",
            sa.CHAR(length=20)
            .with_variant(mysql.CHAR(length=20), "mysql")
            .with_variant(sa.CHAR(length=20), "postgresql"),
            server_default="pending",
            nullable=True,
            comment="Process status, default 'pending'",
        ),
        sa.Column(
            "process_start_time",
            sa.TIMESTAMP()
            .with_variant(mysql.DATETIME(), "mysql")
            .with_variant(postgresql.TIMESTAMP(), "postgresql"),
            nullable=True,
            comment="Timestamp when process started",
        ),
        sa.Column(
            "process_end_time",
            sa.TIMESTAMP()
            .with_variant(mysql.DATETIME(), "mysql")
            .with_variant(postgresql.TIMESTAMP(), "postgresql"),
            nullable=True,
            comment="Timestamp when process ended",
        ),
        sa.Column(
            "process_exec_time",
            sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
            server_default=sa.text("0"),
            nullable=True,
            comment="Execution time in seconds, default 0",
        ),
        sa.Column(
            "exposures",
            sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
            server_default=sa.text("0"),
            nullable=True,
            comment="Number of exposures processed, default 0",
        ),
        sa.Column(
            "visits1",
            sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
            server_default=sa.text("0"),
            nullable=True,
            comment="Number of visits recorded, default 0",
        ),
        sa.Column(
            "retries",
            sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
            server_default=sa.text("0"),
            nullable=True,
            comment="Number of retries attempted, default 0",
        ),
        sa.Column(
            "error",
            sa.TEXT().with_variant(mysql.LONGTEXT(), "mysql").with_variant(sa.TEXT(), "postgresql"),
            nullable=True,
            comment="Error message, if any",
        ),
        sa.Column(
            "butler_repo",
            sa.TEXT().with_variant(mysql.LONGTEXT(), "mysql").with_variant(sa.TEXT(), "postgresql"),
            nullable=True,
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP()
            .with_variant(mysql.DATETIME(), "mysql")
            .with_variant(postgresql.TIMESTAMP(), "postgresql"),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
            comment="Timestamp when record was created, default current timestamp",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", name="un_id"),
        schema="efd_latiss",
        comment="Transformed EFD scheduler.",
        mysql_engine="MyISAM",
    )
    op.create_table(
        "visit1_efd",
        *[
            sa.Column(
                "visit_id",
                sa.BIGINT().with_variant(mysql.BIGINT(), "mysql").with_variant(sa.BIGINT(), "postgresql"),
                nullable=True,
                comment="Visit unique ID.",
            ),
            sa.Column(
                "created_at",
                sa.TIMESTAMP()
                .with_variant(mysql.DATETIME(), "mysql")
                .with_variant(postgresql.TIMESTAMP(), "postgresql"),
                server_default=sa.text("CURRENT_TIMESTAMP"),
                nullable=True,
                comment="Timestamp when record was created, default current timestamp",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard devation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard devation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard devation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard devation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_speedstddev_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_speedstddev_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude (salIndex 204)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_speedstddev_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205)",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_airflow_speedstddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_speedstddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_speedstddev_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_speedstddev_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 201)",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_airflow_speedstddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_speedstddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_speedstddev_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_speedstddev_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204)",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_airflow_speedstddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_speedstddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_speedstddev_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_speedstddev_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of wind speed estimated from quartiles in XX (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Median (mean for some sensors) wind speed in XX (salIndex 205)",
            ),
            sa.Column(
                "at_salindex201_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex201_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex201_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex201_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex201_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex201_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex201_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex201_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex201_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex201_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex201_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex201_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex201_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex201_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex201_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex201_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex201_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex201_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex201_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex201_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex201_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex201_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex201_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex201_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex201_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex201_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex201_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex201_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex201_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_salindex201_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_salindex201_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_salindex201_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_salindex301_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex301_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex301_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex301_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0",
            ),
            sa.Column(
                "at_salindex301_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex301_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex301_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex301_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1",
            ),
            sa.Column(
                "at_salindex301_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex301_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex301_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex301_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2",
            ),
            sa.Column(
                "at_salindex301_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex301_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex301_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex301_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3",
            ),
            sa.Column(
                "at_salindex301_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex301_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex301_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex301_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4",
            ),
            sa.Column(
                "at_salindex301_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex301_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex301_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex301_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5",
            ),
            sa.Column(
                "at_salindex301_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex301_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex301_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex301_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6",
            ),
            sa.Column(
                "at_salindex301_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_salindex301_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_salindex301_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_salindex301_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7",
            ),
            sa.Column(
                "at_azimuth_calculated_angle",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Azimuth axis position computed from the axis encoders at 100 Hz beginning at the specified time. The range is the hard stop limits (L3),  approximately -280 to 280.",
            ),
            sa.Column(
                "at_elevation_calculated_angle",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Elevation axis position computed from the axis encoders at 100 Hz beginning at the specified time.",
            ),
            sa.Column(
                "at_dimm_fwhm_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Combined full width half maximum",
            ),
            sa.Column(
                "at_azimuth_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Elevation axis position computed from the axis encoders at 100 Hz beginning at the specified time.",
            ),
            sa.Column(
                "at_elevation_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Azimuth axis position computed from the axis encoders at 100 Hz beginning at the specified time. The range is the hard stop limits (L3), approximately -280 to 280.",
            ),
            sa.Column(
                "at_hexapod_reported_position_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in x",
            ),
            sa.Column(
                "at_hexapod_reported_position_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in x",
            ),
            sa.Column(
                "at_hexapod_reported_position_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in x",
            ),
            sa.Column(
                "at_hexapod_reported_position_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in y",
            ),
            sa.Column(
                "at_hexapod_reported_position_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in y",
            ),
            sa.Column(
                "at_hexapod_reported_position_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in y",
            ),
            sa.Column(
                "at_hexapod_reported_position_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in z",
            ),
            sa.Column(
                "at_hexapod_reported_position_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in z",
            ),
            sa.Column(
                "at_hexapod_reported_position_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in z",
            ),
            sa.Column(
                "at_hexapod_reported_position_u_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in u",
            ),
            sa.Column(
                "at_hexapod_reported_position_u_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in u",
            ),
            sa.Column(
                "at_hexapod_reported_position_u_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in u",
            ),
            sa.Column(
                "at_hexapod_reported_position_v_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in v",
            ),
            sa.Column(
                "at_hexapod_reported_position_v_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in v",
            ),
            sa.Column(
                "at_hexapod_reported_position_v_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in v",
            ),
            sa.Column(
                "at_hexapod_reported_position_w_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in w",
            ),
            sa.Column(
                "at_hexapod_reported_position_w_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in w",
            ),
            sa.Column(
                "at_hexapod_reported_position_w_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Auxiliary telescope hexapod reported position in w",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex201_dewpoint_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Dew point in AuxTel-ESS02",
            ),
            sa.Column(
                "at_salindex201_relative_humidity_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Relative humidity in AuxTel-ESS02",
            ),
            sa.Column(
                "at_salindex201_pressure_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Atmosferic pressure item 0 in AuxTel-ESS02",
            ),
            sa.Column(
                "at_salindex201_pressure_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Atmosferic pressure item 1 in AuxTel-ESS02",
            ),
            sa.Column(
                "at_salindex301_pressure_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Atmosferic pressure item 0 in weather tower atmospheric pressure",
            ),
            sa.Column(
                "at_salindex301_pressure_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Atmosferic pressure item 1 in weather tower atmospheric pressure",
            ),
            sa.Column(
                "at_pointing_mount_position_ra_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RA calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_ra_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RA calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_dec_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Dec calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_dec_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Dec calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_sky_angle_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Calculated sky angle.",
            ),
            sa.Column(
                "at_pointing_mount_position_sky_angle_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Calculated sky angle.",
            ),
            sa.PrimaryKeyConstraint("visit_id"),
            sa.UniqueConstraint("visit_id", name="un_visit_id"),
        ],
        schema="efd_latiss",
        comment="Transformed EFD topics by visit.",
        mysql_engine="MyISAM",
    )
    op.create_table(
        "visit1_efd_unpivoted",
        sa.Column(
            "visit_id",
            sa.BIGINT().with_variant(mysql.BIGINT(), "mysql").with_variant(sa.BIGINT(), "postgresql"),
            nullable=False,
            comment="Unique identifier for the visit",
        ),
        sa.Column(
            "property",
            sa.VARCHAR(length=64)
            .with_variant(mysql.VARCHAR(length=64), "mysql")
            .with_variant(sa.VARCHAR(length=64), "postgresql"),
            server_default="default_property",
            nullable=False,
            comment="Property name for unpivoted data",
        ),
        sa.Column(
            "field",
            sa.VARCHAR(length=32)
            .with_variant(mysql.VARCHAR(length=32), "mysql")
            .with_variant(sa.VARCHAR(length=32), "postgresql"),
            server_default="default_field",
            nullable=False,
            comment="Field name for unpivoted data",
        ),
        sa.Column(
            "value",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Value corresponding to the parameter",
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP()
            .with_variant(mysql.DATETIME(), "mysql")
            .with_variant(postgresql.TIMESTAMP(), "postgresql"),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
            comment="Timestamp when record was created, default current timestamp",
        ),
        sa.PrimaryKeyConstraint("visit_id", "property", "field"),
        sa.UniqueConstraint("visit_id", "property", "field", name="un_visit_property_field"),
        schema="efd_latiss",
        comment="Unpivoted EFD visit data.",
        mysql_engine="MyISAM",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("visit1_efd_unpivoted", schema="efd_latiss")
    op.drop_table("visit1_efd", schema="efd_latiss")
    op.drop_table("transformed_efd_scheduler", schema="efd_latiss")
    op.drop_table("exposure_efd_unpivoted", schema="efd_latiss")
    op.drop_table("exposure_efd", schema="efd_latiss")
    # ### end Alembic commands ###
