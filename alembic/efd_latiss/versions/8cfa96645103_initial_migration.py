"""initial migration

Revision ID: 8cfa96645103
Revises:
Create Date: 2025-08-05 20:30:13.726248+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import mysql, postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "8cfa96645103"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "exposure_efd",
        *[
            sa.Column(
                "day_obs",
                sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
                nullable=False,
                comment="Day of observation in YYYYMMDD format.",
            ),
            sa.Column(
                "seq_num",
                sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
                nullable=True,
                comment="Sequence number for the exposure.",
            ),
            sa.Column(
                "exposure_id",
                sa.BIGINT().with_variant(mysql.BIGINT(), "mysql").with_variant(sa.BIGINT(), "postgresql"),
                nullable=False,
                comment="Exposure unique ID.",
            ),
            sa.Column(
                "created_at",
                sa.TIMESTAMP()
                .with_variant(mysql.DATETIME(), "mysql")
                .with_variant(postgresql.TIMESTAMP(), "postgresql"),
                server_default=sa.text("CURRENT_TIMESTAMP"),
                nullable=True,
                comment="Timestamp when the record was created, default is current timestamp.",
            ),
            sa.Column(
                "at_mount_jitter_azimuth",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RMS after 4th order polynomial fit of azimuth axis position computed from the axis encoders at 100 Hz beginning at the specified time. The range is the hard stop limits (L3), approximately -280 to 280.",
            ),
            sa.Column(
                "at_mount_jitter_elevation",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RMS after 4th order polynomial fit of elevation axis position computed from the axis encoders at 100 Hz beginning at the specified time.",
            ),
            sa.Column(
                "at_mount_jitter_nasmyth",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="RMS after 4th order polynomial fit of Nasmyth 1 axis position computed from the axis encoders, or nan if this axis is not in use. The range is the software limits (L1), approximately -175 to 175.",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed magnitude (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed magnitude (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed magnitude (salIndex 204)s",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed magnitude (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean maximum wind speed magnitude (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the maximum wind speed magnitude (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum maximum wind speed magnitude (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum maximum wind speed magnitude (salIndex 204).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed estimated from quartiles (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed estimated from quartiles (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_stddev_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed estimated from quartiles (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_stddev_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed estimated from quartiles (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_stddev_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_stddev_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed estimated from quartiles (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed estimated from quartiles (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_stddev_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed estimated from quartiles (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_stddev_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed estimated from quartiles (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex201_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex201_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex201_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex201_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex201_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex201_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex201_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex201_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex201_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex201_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex201_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex201_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex201_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex201_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex201_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex201_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex201_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex201_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex201_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex201_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex201_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex201_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex201_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex201_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex201_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex201_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex201_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex201_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex201_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_salindex201_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_salindex201_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_salindex201_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_salindex301_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex301_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex301_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex301_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex301_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex301_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex301_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex301_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex301_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex301_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex301_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex301_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex301_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex301_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex301_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex301_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex301_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex301_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex301_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex301_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex301_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex301_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex301_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex301_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex301_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex301_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex301_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex301_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex301_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_salindex301_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_salindex301_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_salindex301_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_azimuth_calculated_angle",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Azimuth axis position computed from the axis encoders at 100 Hz beginning at the specified time. The range is the hard stop limits (L3),  approximately -280 to 280.",
            ),
            sa.Column(
                "at_elevation_calculated_angle",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Elevation axis position computed from the axis encoders at 100 Hz beginning at the specified time.",
            ),
            sa.Column(
                "at_dimm_fwhm_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean combined full width half maximum.",
            ),
            sa.Column(
                "at_azimuth_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean elevation axis position computed from the axis encoders at 100 Hz beginning at the specified time.",
            ),
            sa.Column(
                "at_elevation_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Azimuth axis position computed from the axis encoders at 100 Hz beginning at the specified time. The range is the hard stop limits (L3), approximately -280 to 280.",
            ),
            sa.Column(
                "at_hexapod_reported_position_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Auxiliary telescope hexapod reported in x position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum auxiliary telescope hexapod reported in x position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum auxiliary telescope hexapod reported in x position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Auxiliary telescope hexapod reported in x position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum auxiliary telescope hexapod reported in y position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum auxiliary telescope hexapod reported in y position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean auxiliary telescope hexapod reported in z position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum auxiliary telescope hexapod reported in z position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum auxiliary telescope hexapod reported in z position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_u_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean auxiliary telescope hexapod reported in u position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_u_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum auxiliary telescope hexapod reported in u position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_u_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum auxiliary telescope hexapod reported in u position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_v_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean auxiliary telescope hexapod reported in v position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_v_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum auxiliary telescope hexapod reported in v position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_v_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum auxiliary telescope hexapod reported in v position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_w_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean auxiliary telescope hexapod reported in w position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_w_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum auxiliary telescope hexapod reported in w position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_w_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum auxiliary telescope hexapod reported in w position.",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex201_dewpoint_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean dew point in AuxTel-ESS02.",
            ),
            sa.Column(
                "at_salindex201_relative_humidity_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean relative humidity in AuxTel-ESS02.",
            ),
            sa.Column(
                "at_salindex201_pressure_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean atmospheric pressure item 0 in AuxTel-ESS02.",
            ),
            sa.Column(
                "at_salindex201_pressure_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean atmospheric pressure item 1 in AuxTel-ESS02.",
            ),
            sa.Column(
                "at_salindex301_pressure_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean atmospheric pressure item 0 in weather tower atmospheric pressure.",
            ),
            sa.Column(
                "at_salindex301_pressure_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean atmospheric pressure item 1 in weather tower atmospheric pressure.",
            ),
            sa.Column(
                "at_pointing_mount_position_ra_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean RA calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_ra_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the RA calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_dec_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Dec calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_dec_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Dec calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_sky_angle_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean c sky angle.",
            ),
            sa.Column(
                "at_pointing_mount_position_sky_angle_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the calculated sky angle.",
            ),
            sa.Column(
                "at_dome_temperature_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean dome temperature item 0.",
            ),
            sa.PrimaryKeyConstraint("day_obs", "seq_num"),
            sa.UniqueConstraint("day_obs", "seq_num", name="un_exposure_efd_day_obs_seq_num"),
            sa.UniqueConstraint("exposure_id", name="un_exposure_efd_exposure_id"),
        ],
        schema="efd_latiss",
        comment="Transformed EFD topics by exposure.",
        mysql_engine="MyISAM",
    )
    op.create_table(
        "exposure_efd_unpivoted",
        sa.Column(
            "day_obs",
            sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
            nullable=False,
            comment="Day of observation in YYYYMMDD format.",
        ),
        sa.Column(
            "seq_num",
            sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
            nullable=False,
            comment="Sequence number for the exposure.",
        ),
        sa.Column(
            "exposure_id",
            sa.BIGINT().with_variant(mysql.BIGINT(), "mysql").with_variant(sa.BIGINT(), "postgresql"),
            nullable=False,
            comment="Unique identifier for the exposure.",
        ),
        sa.Column(
            "property",
            sa.VARCHAR(length=64)
            .with_variant(mysql.VARCHAR(length=64), "mysql")
            .with_variant(sa.VARCHAR(length=64), "postgresql"),
            server_default="default_property",
            nullable=False,
            comment="Property name for unpivoted data",
        ),
        sa.Column(
            "field",
            sa.VARCHAR(length=32)
            .with_variant(mysql.VARCHAR(length=32), "mysql")
            .with_variant(sa.VARCHAR(length=32), "postgresql"),
            server_default="default_field",
            nullable=False,
            comment="Field name for unpivoted data.",
        ),
        sa.Column(
            "value",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Value corresponding to the parameter",
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP()
            .with_variant(mysql.DATETIME(), "mysql")
            .with_variant(postgresql.TIMESTAMP(), "postgresql"),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
            comment="Timestamp when record was created, default current timestamp.",
        ),
        sa.PrimaryKeyConstraint("day_obs", "seq_num", "exposure_id", "property", "field"),
        schema="efd_latiss",
        comment="Unpivoted EFD exposure data.",
        mysql_engine="MyISAM",
    )
    op.create_table(
        "visit1_efd",
        *[
            sa.Column(
                "day_obs",
                sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
                nullable=False,
                comment="Day of observation in YYYYMMDD format.",
            ),
            sa.Column(
                "seq_num",
                sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
                nullable=True,
                comment="Sequence number for the visit.",
            ),
            sa.Column(
                "visit_id",
                sa.BIGINT().with_variant(mysql.BIGINT(), "mysql").with_variant(sa.BIGINT(), "postgresql"),
                nullable=False,
                comment="Visit unique ID.",
            ),
            sa.Column(
                "created_at",
                sa.TIMESTAMP()
                .with_variant(mysql.DATETIME(), "mysql")
                .with_variant(postgresql.TIMESTAMP(), "postgresql"),
                server_default=sa.text("CURRENT_TIMESTAMP"),
                nullable=True,
                comment="Timestamp when record was created, default current timestamp.",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex201_sonic_temperature_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median sonic temperature (air temperature measured sonically). Sonic temperature has poor absolute accuracy (it can be off by several degrees) but good time resolution.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex205_sonic_temperature_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of sonic temperature (air temperature measured sonically) estimated from quartiles.",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 0 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 1 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_stddev_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-ESS04 along axis 2 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_magnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_wind_speed_maxmagnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum maximum wind speed magnitude in AuxTel-ESS04 (salIndex 201).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles along axis 0 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles along axis 1 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_stddev_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles along axis 2 (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed magnitude (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed magnitude (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed magnitude (salIndex 204)s",
            ),
            sa.Column(
                "at_salindex204_wind_speed_magnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed magnitude (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean maximum wind speed magnitude (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the maximum wind speed magnitude (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum maximum wind speed magnitude (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_wind_speed_maxmagnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum maximum wind speed magnitude (salIndex 204).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed (x, y, z) in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 0 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 1 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_stddev_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed (x, y, z) estimated from quartiles in AuxTel-GillLabJack01 along axis 2 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_magnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_wind_speed_maxmagnitude_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum maximum wind speed magnitude in AuxTel-GillLabJack01 (salIndex 205).",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed estimated from quartiles (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed estimated from quartiles (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_stddev_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed estimated from quartiles (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_speed_stddev_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed estimated from quartiles (salIndex 201). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex201_airflow_direction_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed (salIndex 201).",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_stddev_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_speed_stddev_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed estimated from quartiles in AuxTel-Windsonic (salIndex 204). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex204_airflow_direction_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed in AuxTel-Windsonic (salIndex 204).",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_stddev_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean standard deviation of wind speed estimated from quartiles (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_stddev_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the standard deviation of wind speed estimated from quartiles (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_stddev_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum standard deviation of wind speed estimated from quartiles (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_speed_stddev_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum standard deviation of wind speed estimated from quartiles (salIndex 205). Not available for all sensor types.",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex205_airflow_direction_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum median (mean for some sensors) wind speed (salIndex 205).",
            ),
            sa.Column(
                "at_salindex201_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex201_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex201_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex201_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex201_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex201_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex201_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex201_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex201_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex201_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex201_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex201_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex201_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex201_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex201_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex201_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex201_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex201_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex201_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex201_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex201_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex201_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex201_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex201_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex201_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex201_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex201_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex201_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex201_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_salindex201_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_salindex201_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_salindex201_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_salindex301_temperature_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex301_temperature_0_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex301_temperature_0_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex301_temperature_0_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 0.",
            ),
            sa.Column(
                "at_salindex301_temperature_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex301_temperature_1_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex301_temperature_1_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex301_temperature_1_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 1.",
            ),
            sa.Column(
                "at_salindex301_temperature_2_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex301_temperature_2_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex301_temperature_2_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex301_temperature_2_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 2.",
            ),
            sa.Column(
                "at_salindex301_temperature_3_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex301_temperature_3_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex301_temperature_3_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex301_temperature_3_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 3.",
            ),
            sa.Column(
                "at_salindex301_temperature_4_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex301_temperature_4_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex301_temperature_4_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex301_temperature_4_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 4.",
            ),
            sa.Column(
                "at_salindex301_temperature_5_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex301_temperature_5_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex301_temperature_5_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex301_temperature_5_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 5.",
            ),
            sa.Column(
                "at_salindex301_temperature_6_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex301_temperature_6_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex301_temperature_6_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex301_temperature_6_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 6.",
            ),
            sa.Column(
                "at_salindex301_temperature_7_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_salindex301_temperature_7_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_salindex301_temperature_7_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_salindex301_temperature_7_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum AuxTel-ESS01, AuxTel-ESS02, AuxTel-ESS03 temperature item 7.",
            ),
            sa.Column(
                "at_azimuth_calculated_angle",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Azimuth axis position computed from the axis encoders at 100 Hz beginning at the specified time. The range is the hard stop limits (L3),  approximately -280 to 280.",
            ),
            sa.Column(
                "at_elevation_calculated_angle",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Elevation axis position computed from the axis encoders at 100 Hz beginning at the specified time.",
            ),
            sa.Column(
                "at_dimm_fwhm_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean combined full width half maximum.",
            ),
            sa.Column(
                "at_azimuth_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean elevation axis position computed from the axis encoders at 100 Hz beginning at the specified time.",
            ),
            sa.Column(
                "at_elevation_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Azimuth axis position computed from the axis encoders at 100 Hz beginning at the specified time. The range is the hard stop limits (L3), approximately -280 to 280.",
            ),
            sa.Column(
                "at_hexapod_reported_position_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Auxiliary telescope hexapod reported in x position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum auxiliary telescope hexapod reported in x position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum auxiliary telescope hexapod reported in x position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Auxiliary telescope hexapod reported in x position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum auxiliary telescope hexapod reported in y position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum auxiliary telescope hexapod reported in y position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean auxiliary telescope hexapod reported in z position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum auxiliary telescope hexapod reported in z position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum auxiliary telescope hexapod reported in z position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_u_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean auxiliary telescope hexapod reported in u position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_u_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum auxiliary telescope hexapod reported in u position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_u_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum auxiliary telescope hexapod reported in u position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_v_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean auxiliary telescope hexapod reported in v position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_v_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum auxiliary telescope hexapod reported in v position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_v_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum auxiliary telescope hexapod reported in v position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_w_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean auxiliary telescope hexapod reported in w position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_w_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum auxiliary telescope hexapod reported in w position.",
            ),
            sa.Column(
                "at_hexapod_reported_position_w_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum auxiliary telescope hexapod reported in w position.",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_acceleration_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_x_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in x direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_y_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in y direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_min",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Minimum acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex202_accelerationpsd_z_max",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Maximum acceleration in z direction.",
            ),
            sa.Column(
                "at_salindex201_dewpoint_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean dew point in AuxTel-ESS02.",
            ),
            sa.Column(
                "at_salindex201_relative_humidity_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean relative humidity in AuxTel-ESS02.",
            ),
            sa.Column(
                "at_salindex201_pressure_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean atmospheric pressure item 0 in AuxTel-ESS02.",
            ),
            sa.Column(
                "at_salindex201_pressure_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean atmospheric pressure item 1 in AuxTel-ESS02.",
            ),
            sa.Column(
                "at_salindex301_pressure_0_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean atmospheric pressure item 0 in weather tower atmospheric pressure.",
            ),
            sa.Column(
                "at_salindex301_pressure_1_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean atmospheric pressure item 1 in weather tower atmospheric pressure.",
            ),
            sa.Column(
                "at_pointing_mount_position_ra_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean RA calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_ra_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the RA calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_dec_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean Dec calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_dec_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the Dec calculated from the azimuthCalculatedAngle and elevationCalculatedAngle.",
            ),
            sa.Column(
                "at_pointing_mount_position_sky_angle_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean c sky angle.",
            ),
            sa.Column(
                "at_pointing_mount_position_sky_angle_stddev",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Standard deviation of the calculated sky angle.",
            ),
            sa.Column(
                "at_dome_temperature_mean",
                sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
                nullable=True,
                comment="Mean dome temperature item 0.",
            ),
            sa.PrimaryKeyConstraint("day_obs", "seq_num"),
            sa.UniqueConstraint("day_obs", "seq_num", name="un_visit1_efd_day_obs_seq_num"),
            sa.UniqueConstraint("visit_id", name="un_visit1_efd_visit_id"),
        ],
        schema="efd_latiss",
        comment="Transformed EFD topics by visit.",
        mysql_engine="MyISAM",
    )
    op.create_table(
        "visit1_efd_unpivoted",
        sa.Column(
            "day_obs",
            sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
            nullable=False,
            comment="Day of observation in YYYYMMDD format.",
        ),
        sa.Column(
            "seq_num",
            sa.INTEGER().with_variant(mysql.INTEGER(), "mysql").with_variant(sa.INTEGER(), "postgresql"),
            nullable=False,
            comment="Sequence number for the visit.",
        ),
        sa.Column(
            "visit_id",
            sa.BIGINT().with_variant(mysql.BIGINT(), "mysql").with_variant(sa.BIGINT(), "postgresql"),
            nullable=False,
            comment="Unique identifier for the visit.",
        ),
        sa.Column(
            "property",
            sa.VARCHAR(length=64)
            .with_variant(mysql.VARCHAR(length=64), "mysql")
            .with_variant(sa.VARCHAR(length=64), "postgresql"),
            server_default="default_property",
            nullable=False,
            comment="Property name for unpivoted data.",
        ),
        sa.Column(
            "field",
            sa.VARCHAR(length=32)
            .with_variant(mysql.VARCHAR(length=32), "mysql")
            .with_variant(sa.VARCHAR(length=32), "postgresql"),
            server_default="default_field",
            nullable=False,
            comment="Field name for unpivoted data.",
        ),
        sa.Column(
            "value",
            sa.FLOAT().with_variant(mysql.FLOAT(), "mysql").with_variant(sa.FLOAT(), "postgresql"),
            nullable=True,
            comment="Value corresponding to the parameter.",
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP()
            .with_variant(mysql.DATETIME(), "mysql")
            .with_variant(postgresql.TIMESTAMP(), "postgresql"),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
            comment="Timestamp when record was created, default current timestamp.",
        ),
        sa.PrimaryKeyConstraint("day_obs", "seq_num", "visit_id", "property", "field"),
        schema="efd_latiss",
        comment="Unpivoted EFD visit data.",
        mysql_engine="MyISAM",
    )
    # ### end Alembic commands ###

    op.execute("GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA efd TO oods")
    op.execute("GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA efd_latiss TO oods")
    op.execute("GRANT SELECT ON ALL TABLES IN SCHEMA efd_latiss TO usdf")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("visit1_efd_unpivoted", schema="efd_latiss")
    op.drop_table("visit1_efd", schema="efd_latiss")
    op.drop_table("exposure_efd_unpivoted", schema="efd_latiss")
    op.drop_table("exposure_efd", schema="efd_latiss")
    # ### end Alembic commands ###
